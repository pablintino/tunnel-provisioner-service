// Code generated by MockGen. DO NOT EDIT.
// Source: services/ip_pool.go

// Package services_test is a generated GoMock package.
package services_test

import (
	net "net"
	reflect "reflect"
	models "tunnel-provisioner-service/models"

	gomock "github.com/golang/mock/gomock"
)

// MockPoolService is a mock of PoolService interface.
type MockPoolService struct {
	ctrl     *gomock.Controller
	recorder *MockPoolServiceMockRecorder
}

// MockPoolServiceMockRecorder is the mock recorder for MockPoolService.
type MockPoolServiceMockRecorder struct {
	mock *MockPoolService
}

// NewMockPoolService creates a new mock instance.
func NewMockPoolService(ctrl *gomock.Controller) *MockPoolService {
	mock := &MockPoolService{ctrl: ctrl}
	mock.recorder = &MockPoolServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPoolService) EXPECT() *MockPoolServiceMockRecorder {
	return m.recorder
}

// DeletePool mocks base method.
func (m *MockPoolService) DeletePool(tunnel *models.WireguardTunnelInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePool", tunnel)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePool indicates an expected call of DeletePool.
func (mr *MockPoolServiceMockRecorder) DeletePool(tunnel interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePool", reflect.TypeOf((*MockPoolService)(nil).DeletePool), tunnel)
}

// GetNextIp mocks base method.
func (m *MockPoolService) GetNextIp(tunnel *models.WireguardTunnelInfo) (net.IP, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNextIp", tunnel)
	ret0, _ := ret[0].(net.IP)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNextIp indicates an expected call of GetNextIp.
func (mr *MockPoolServiceMockRecorder) GetNextIp(tunnel interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNextIp", reflect.TypeOf((*MockPoolService)(nil).GetNextIp), tunnel)
}

// RemoveIp mocks base method.
func (m *MockPoolService) RemoveIp(tunnel *models.WireguardTunnelInfo, ip net.IP) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveIp", tunnel, ip)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveIp indicates an expected call of RemoveIp.
func (mr *MockPoolServiceMockRecorder) RemoveIp(tunnel, ip interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveIp", reflect.TypeOf((*MockPoolService)(nil).RemoveIp), tunnel, ip)
}
